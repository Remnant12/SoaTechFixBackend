// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuotationService.DbConfig;

#nullable disable

namespace QuotationService.Migrations
{
    [DbContext(typeof(QuotationdbContext))]
    [Migration("20241006090732_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QuotationService.Models.QuoteProduct", b =>
                {
                    b.Property<int>("QuoteProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuoteProductId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("UnitPrice")
                        .IsRequired()
                        .HasColumnType("numeric");

                    b.HasKey("QuoteProductId");

                    b.HasIndex("RequestId");

                    b.ToTable("QuoteProducts");
                });

            modelBuilder.Entity("QuotationService.Models.QuoteRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RequestId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RequestNotes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.Property<int>("TechFixCustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ValidUntil")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("RequestId");

                    b.ToTable("QuoteRequests");
                });

            modelBuilder.Entity("QuotationService.Models.QuoteProduct", b =>
                {
                    b.HasOne("QuotationService.Models.QuoteRequest", "QuoteRequest")
                        .WithMany("Products")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuoteRequest");
                });

            modelBuilder.Entity("QuotationService.Models.QuoteRequest", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
